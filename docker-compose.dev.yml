version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: property_rental_management_postgres_dev
    environment:
      POSTGRES_DB: property_rental_management_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rR%jrYKNqQdnYVQUkzuN
      POSTGRES_INITDB_ARGS: '--data-checksums'
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d property_rental_management_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - property_dev_network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - property_dev_network

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: property_management_app_dev
    env_file:
      - .env.development
    depends_on:
      - postgres
      - mailhog
    networks:
      - property_dev_network
    ports:
      - "8000:8000"
    volumes:
      - .:/app  # Mount current dir for hot reload
      - /app/node_modules  # Avoid overwriting node_modules from container
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  property_dev_network:
    driver: bridge
