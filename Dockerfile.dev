# ---------- Base Stage: Install build dependencies ----------
    FROM node:22-alpine AS base
    WORKDIR /app
    
    # Install build dependencies
    RUN apk add --no-cache libc6-compat python3 make g++ bash git
    
    # Install pnpm globally
    RUN npm install -g pnpm
    
    # Copy package files and install ALL dependencies (dev + prod)
    COPY package*.json ./
    COPY pnpm-lock.yaml* ./
    COPY .npmrc* ./
    RUN pnpm install --prefer-offline
    
    # ---------- Stage 1: copy source ----------
    FROM node:22-alpine AS dev
    WORKDIR /app
    
    # Bring node_modules from base
    COPY --from=base /app/node_modules ./node_modules
    
    # Copy full source code
    COPY . .
    
    # Optional: create logs folder
    RUN mkdir -p logs
    
    # Non-root user (optional)
    RUN addgroup -S devgroup && adduser -S devuser -G devgroup
    USER devuser
    
    # Environment variables
    ENV NODE_ENV=development
    ENV PORT=8000
    
    # Expose dev port
    EXPOSE 8000
    
    # Start app in dev mode with hot reload
    CMD ["pnpm", "run", "start:dev"]
    